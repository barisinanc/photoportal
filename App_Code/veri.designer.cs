#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="veritabani")]
public partial class veriDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertalbum(album instance);
  partial void Updatealbum(album instance);
  partial void Deletealbum(album instance);
  partial void Insertkullanici(kullanici instance);
  partial void Updatekullanici(kullanici instance);
  partial void Deletekullanici(kullanici instance);
  partial void Insertfotograf(fotograf instance);
  partial void Updatefotograf(fotograf instance);
  partial void Deletefotograf(fotograf instance);
  #endregion
	
	public veriDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["veritabaniConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public veriDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public veriDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public veriDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public veriDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<album> albums
	{
		get
		{
			return this.GetTable<album>();
		}
	}
	
	public System.Data.Linq.Table<kullanici> kullanicis
	{
		get
		{
			return this.GetTable<kullanici>();
		}
	}
	
	public System.Data.Linq.Table<fotograf> fotografs
	{
		get
		{
			return this.GetTable<fotograf>();
		}
	}
}

[Table(Name="dbo.album")]
public partial class album : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _ad;
	
	private System.Nullable<System.DateTime> _tarih;
	
	private int _kul_id;
	
	private EntitySet<fotograf> _fotografs;
	
	private EntityRef<kullanici> _kullanici;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnadChanging(string value);
    partial void OnadChanged();
    partial void OntarihChanging(System.Nullable<System.DateTime> value);
    partial void OntarihChanged();
    partial void Onkul_idChanging(int value);
    partial void Onkul_idChanged();
    #endregion
	
	public album()
	{
		this._fotografs = new EntitySet<fotograf>(new Action<fotograf>(this.attach_fotografs), new Action<fotograf>(this.detach_fotografs));
		this._kullanici = default(EntityRef<kullanici>);
		OnCreated();
	}
	
	[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[Column(Storage="_ad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ad
	{
		get
		{
			return this._ad;
		}
		set
		{
			if ((this._ad != value))
			{
				this.OnadChanging(value);
				this.SendPropertyChanging();
				this._ad = value;
				this.SendPropertyChanged("ad");
				this.OnadChanged();
			}
		}
	}
	
	[Column(Storage="_tarih", DbType="DateTime")]
	public System.Nullable<System.DateTime> tarih
	{
		get
		{
			return this._tarih;
		}
		set
		{
			if ((this._tarih != value))
			{
				this.OntarihChanging(value);
				this.SendPropertyChanging();
				this._tarih = value;
				this.SendPropertyChanged("tarih");
				this.OntarihChanged();
			}
		}
	}
	
	[Column(Storage="_kul_id", DbType="Int NOT NULL")]
	public int kul_id
	{
		get
		{
			return this._kul_id;
		}
		set
		{
			if ((this._kul_id != value))
			{
				if (this._kullanici.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onkul_idChanging(value);
				this.SendPropertyChanging();
				this._kul_id = value;
				this.SendPropertyChanged("kul_id");
				this.Onkul_idChanged();
			}
		}
	}
	
	[Association(Name="album_fotograf", Storage="_fotografs", ThisKey="id", OtherKey="album_id")]
	public EntitySet<fotograf> fotografs
	{
		get
		{
			return this._fotografs;
		}
		set
		{
			this._fotografs.Assign(value);
		}
	}
	
	[Association(Name="kullanici_album", Storage="_kullanici", ThisKey="kul_id", OtherKey="id", IsForeignKey=true)]
	public kullanici kullanici
	{
		get
		{
			return this._kullanici.Entity;
		}
		set
		{
			kullanici previousValue = this._kullanici.Entity;
			if (((previousValue != value) 
						|| (this._kullanici.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._kullanici.Entity = null;
					previousValue.albums.Remove(this);
				}
				this._kullanici.Entity = value;
				if ((value != null))
				{
					value.albums.Add(this);
					this._kul_id = value.id;
				}
				else
				{
					this._kul_id = default(int);
				}
				this.SendPropertyChanged("kullanici");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_fotografs(fotograf entity)
	{
		this.SendPropertyChanging();
		entity.album = this;
	}
	
	private void detach_fotografs(fotograf entity)
	{
		this.SendPropertyChanging();
		entity.album = null;
	}
}

[Table(Name="dbo.kullanici")]
public partial class kullanici : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _kadi;
	
	private string _ad;
	
	private string _soyad;
	
	private string _eposta;
	
	private string _sifre;
	
	private EntitySet<album> _albums;
	
	private EntitySet<fotograf> _fotografs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnkadiChanging(string value);
    partial void OnkadiChanged();
    partial void OnadChanging(string value);
    partial void OnadChanged();
    partial void OnsoyadChanging(string value);
    partial void OnsoyadChanged();
    partial void OnepostaChanging(string value);
    partial void OnepostaChanged();
    partial void OnsifreChanging(string value);
    partial void OnsifreChanged();
    #endregion
	
	public kullanici()
	{
		this._albums = new EntitySet<album>(new Action<album>(this.attach_albums), new Action<album>(this.detach_albums));
		this._fotografs = new EntitySet<fotograf>(new Action<fotograf>(this.attach_fotografs), new Action<fotograf>(this.detach_fotografs));
		OnCreated();
	}
	
	[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[Column(Storage="_kadi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string kadi
	{
		get
		{
			return this._kadi;
		}
		set
		{
			if ((this._kadi != value))
			{
				this.OnkadiChanging(value);
				this.SendPropertyChanging();
				this._kadi = value;
				this.SendPropertyChanged("kadi");
				this.OnkadiChanged();
			}
		}
	}
	
	[Column(Storage="_ad", DbType="NVarChar(50)")]
	public string ad
	{
		get
		{
			return this._ad;
		}
		set
		{
			if ((this._ad != value))
			{
				this.OnadChanging(value);
				this.SendPropertyChanging();
				this._ad = value;
				this.SendPropertyChanged("ad");
				this.OnadChanged();
			}
		}
	}
	
	[Column(Storage="_soyad", DbType="NVarChar(50)")]
	public string soyad
	{
		get
		{
			return this._soyad;
		}
		set
		{
			if ((this._soyad != value))
			{
				this.OnsoyadChanging(value);
				this.SendPropertyChanging();
				this._soyad = value;
				this.SendPropertyChanged("soyad");
				this.OnsoyadChanged();
			}
		}
	}
	
	[Column(Storage="_eposta", DbType="NVarChar(100)")]
	public string eposta
	{
		get
		{
			return this._eposta;
		}
		set
		{
			if ((this._eposta != value))
			{
				this.OnepostaChanging(value);
				this.SendPropertyChanging();
				this._eposta = value;
				this.SendPropertyChanged("eposta");
				this.OnepostaChanged();
			}
		}
	}
	
	[Column(Storage="_sifre", DbType="NVarChar(50)")]
	public string sifre
	{
		get
		{
			return this._sifre;
		}
		set
		{
			if ((this._sifre != value))
			{
				this.OnsifreChanging(value);
				this.SendPropertyChanging();
				this._sifre = value;
				this.SendPropertyChanged("sifre");
				this.OnsifreChanged();
			}
		}
	}
	
	[Association(Name="kullanici_album", Storage="_albums", ThisKey="id", OtherKey="kul_id")]
	public EntitySet<album> albums
	{
		get
		{
			return this._albums;
		}
		set
		{
			this._albums.Assign(value);
		}
	}
	
	[Association(Name="kullanici_fotograf", Storage="_fotografs", ThisKey="id", OtherKey="kul_id")]
	public EntitySet<fotograf> fotografs
	{
		get
		{
			return this._fotografs;
		}
		set
		{
			this._fotografs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_albums(album entity)
	{
		this.SendPropertyChanging();
		entity.kullanici = this;
	}
	
	private void detach_albums(album entity)
	{
		this.SendPropertyChanging();
		entity.kullanici = null;
	}
	
	private void attach_fotografs(fotograf entity)
	{
		this.SendPropertyChanging();
		entity.kullanici = this;
	}
	
	private void detach_fotografs(fotograf entity)
	{
		this.SendPropertyChanging();
		entity.kullanici = null;
	}
}

[Table(Name="dbo.fotograf")]
public partial class fotograf : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _dosya;
	
	private int _album_id;
	
	private System.Nullable<System.DateTime> _tarih;
	
	private int _kul_id;
	
	private string _ad;
	
	private EntityRef<album> _album;
	
	private EntityRef<kullanici> _kullanici;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndosyaChanging(string value);
    partial void OndosyaChanged();
    partial void Onalbum_idChanging(int value);
    partial void Onalbum_idChanged();
    partial void OntarihChanging(System.Nullable<System.DateTime> value);
    partial void OntarihChanged();
    partial void Onkul_idChanging(int value);
    partial void Onkul_idChanged();
    partial void OnadChanging(string value);
    partial void OnadChanged();
    #endregion
	
	public fotograf()
	{
		this._album = default(EntityRef<album>);
		this._kullanici = default(EntityRef<kullanici>);
		OnCreated();
	}
	
	[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[Column(Storage="_dosya", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string dosya
	{
		get
		{
			return this._dosya;
		}
		set
		{
			if ((this._dosya != value))
			{
				this.OndosyaChanging(value);
				this.SendPropertyChanging();
				this._dosya = value;
				this.SendPropertyChanged("dosya");
				this.OndosyaChanged();
			}
		}
	}
	
	[Column(Storage="_album_id", DbType="Int NOT NULL")]
	public int album_id
	{
		get
		{
			return this._album_id;
		}
		set
		{
			if ((this._album_id != value))
			{
				if (this._album.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onalbum_idChanging(value);
				this.SendPropertyChanging();
				this._album_id = value;
				this.SendPropertyChanged("album_id");
				this.Onalbum_idChanged();
			}
		}
	}
	
	[Column(Storage="_tarih", DbType="DateTime")]
	public System.Nullable<System.DateTime> tarih
	{
		get
		{
			return this._tarih;
		}
		set
		{
			if ((this._tarih != value))
			{
				this.OntarihChanging(value);
				this.SendPropertyChanging();
				this._tarih = value;
				this.SendPropertyChanged("tarih");
				this.OntarihChanged();
			}
		}
	}
	
	[Column(Storage="_kul_id", DbType="Int NOT NULL")]
	public int kul_id
	{
		get
		{
			return this._kul_id;
		}
		set
		{
			if ((this._kul_id != value))
			{
				if (this._kullanici.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onkul_idChanging(value);
				this.SendPropertyChanging();
				this._kul_id = value;
				this.SendPropertyChanged("kul_id");
				this.Onkul_idChanged();
			}
		}
	}
	
	[Column(Storage="_ad", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string ad
	{
		get
		{
			return this._ad;
		}
		set
		{
			if ((this._ad != value))
			{
				this.OnadChanging(value);
				this.SendPropertyChanging();
				this._ad = value;
				this.SendPropertyChanged("ad");
				this.OnadChanged();
			}
		}
	}
	
	[Association(Name="album_fotograf", Storage="_album", ThisKey="album_id", OtherKey="id", IsForeignKey=true)]
	public album album
	{
		get
		{
			return this._album.Entity;
		}
		set
		{
			album previousValue = this._album.Entity;
			if (((previousValue != value) 
						|| (this._album.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._album.Entity = null;
					previousValue.fotografs.Remove(this);
				}
				this._album.Entity = value;
				if ((value != null))
				{
					value.fotografs.Add(this);
					this._album_id = value.id;
				}
				else
				{
					this._album_id = default(int);
				}
				this.SendPropertyChanged("album");
			}
		}
	}
	
	[Association(Name="kullanici_fotograf", Storage="_kullanici", ThisKey="kul_id", OtherKey="id", IsForeignKey=true)]
	public kullanici kullanici
	{
		get
		{
			return this._kullanici.Entity;
		}
		set
		{
			kullanici previousValue = this._kullanici.Entity;
			if (((previousValue != value) 
						|| (this._kullanici.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._kullanici.Entity = null;
					previousValue.fotografs.Remove(this);
				}
				this._kullanici.Entity = value;
				if ((value != null))
				{
					value.fotografs.Add(this);
					this._kul_id = value.id;
				}
				else
				{
					this._kul_id = default(int);
				}
				this.SendPropertyChanged("kullanici");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
